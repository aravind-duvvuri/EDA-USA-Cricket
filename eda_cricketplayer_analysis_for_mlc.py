# -*- coding: utf-8 -*-
"""EDA_Cricketplayer_Analysis_for_MLC.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e1VqaOEzGn3px0bZreNsHAL17NYsjDk5
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

df=pd.read_csv('Cricket_Every_T20i_International_Innings.csv')
df.head()

"""Total Number of Unique players"""

#Unique_players=list(df['Player_Name'].unique())
#Unique_players
Unique_players_count=df['Player_Name'].nunique()
Unique_players_count

"""Total Teams"""

Team_list = df['Team'].to_list()
Opposition_list2 = df['Opposition'].to_list()
list = Team_list + Opposition_list2
Total_teams = []
count = 0
for i in list:
    if i not in Total_teams:
        count += 1
        Total_teams.append(i)
print("No of unique items are:", count)

print(Total_teams)

"""Players with experience playing for U.S.A."""

filtered_df = df[df['Team'] == 'U.S.A.']
USA_players = filtered_df.groupby(['Player_Name', 'Team'])['Match_ID'].nunique().sort_values(ascending=False)
USA_players = top_players.reset_index()

print(USA_players)

plt.figure(figsize=(10, 6))
plt.barh(USA_players['Player_Name'], USA_players['Match_ID'], color='skyblue')
plt.xlabel('Number of Unique Matches')
plt.ylabel('Player Name')
plt.title('Top 10 USA Players by Unique Matches')
plt.gca().invert_yaxis()  # Invert y-axis to show the highest value at the top
plt.show()

"""Players with most Runs for USA."""

filtered_df = filtered_df[filtered_df['Runs'] != 'DNB']
filtered_df['Runs'] = filtered_df['Runs'].str.replace('*', '', regex=False)
filtered_df['Runs'] = filtered_df['Runs'].astype(int)
grouped_df = filtered_df.groupby('Player_Name')['Runs'].sum()
grouped_df = grouped_df.sort_values(ascending=False)
print(grouped_df)

plt.figure(figsize=(10, 6))
grouped_df.plot(kind='bar', color='skyblue')
plt.xlabel('Player Name')
plt.ylabel('Total Runs')
plt.title('Total Runs Scored by USA Players')
plt.xticks(rotation=45)
plt.show()

"""Players with Best Strike Rate for USA."""

filtered_df = filtered_df[filtered_df['Runs'] != 'DNB']
filtered_df['BF'] = filtered_df['BF'].astype(int)
filtered_df['SR'] = (filtered_df['Runs'] / filtered_df['BF']) * 100
grouped_df = filtered_df.groupby('Player_Name')['SR'].mean()
grouped_df = grouped_df.sort_values(ascending=False)
print(grouped_df)

plt.figure(figsize=(10, 6))
grouped_df.plot(kind='bar', color='skyblue')
plt.xlabel('Player Name')
plt.ylabel('Strike Rate')
plt.title('Average Strike Rate of USA Players')
plt.xticks(rotation=45)
plt.show()